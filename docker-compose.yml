version: '3.8'

services:
  fastapi:
    build:
      context: .
    container_name: fastapi_postgres_starter # Main application container
    working_dir: /app
    ports:
      - "8000:8000" # Expose FastAPI on port 8000
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - postgres
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: >
      bash -c "alembic upgrade head &&
               uvicorn app.main:app --host 0.0.0.0 --port 8000"

  postgres:
    image: postgres:14
    container_name: fastapi_postgres_starter_db
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: fastapi_postgres_starter_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_insight:
    image: redislabs/redisinsight:1.14.0
    container_name: fastapi_postgres_starter_redis_insight
    restart: always
    ports:
      - "8001:8001"
    environment:
      - RICONNECT_URI=redis://:${REDIS_PASSWORD}@redis:6379
    volumes:
      - redis_insight_data:/db
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  redis_insight_data:
